<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>dev.vinpol</groupId>
        <artifactId>nebula</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>dragonship</artifactId>
    <name>dragonship</name>
    <description>dragonship</description>

    <properties>
        <timefold-solver.version>1.7.0</timefold-solver.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>me.paulschwarz</groupId>
            <artifactId>spring-dotenv</artifactId>
            <version>4.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <dependency>
            <groupId>dev.vinpol.nebula</groupId>
            <artifactId>api</artifactId>
        </dependency>

        <dependency>
            <groupId>dev.vinpol.nebula</groupId>
            <artifactId>javagoap</artifactId>
        </dependency>

        <dependency>
            <groupId>dev.vinpol</groupId>
            <artifactId>torterra</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <!-- required version by spring, the newer version we use in testing won't let it start -->
            <version>1.4.14</version>
        </dependency>

        <dependency>
            <groupId>gg.jte</groupId>
            <artifactId>jte-spring-boot-starter-3</artifactId>
        </dependency>

        <dependency>
            <groupId>gg.jte</groupId>
            <artifactId>jte</artifactId>
        </dependency>

        <dependency>
            <groupId>com.j2html</groupId>
            <artifactId>j2html</artifactId>
            <version>1.6.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>

        <dependency>
            <groupId>org.cache2k</groupId>
            <artifactId>cache2k-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.dizitart</groupId>
            <artifactId>nitrite</artifactId>
        </dependency>

        <dependency>
            <groupId>org.dizitart</groupId>
            <artifactId>nitrite-mvstore-adapter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.dizitart</groupId>
            <artifactId>nitrite-jackson-mapper</artifactId>
        </dependency>

        <dependency>
            <groupId>one.util</groupId>
            <artifactId>streamex</artifactId>
            <version>0.8.2</version>
        </dependency>

        <!-- not yet -->
        <!--        <dependency>-->
        <!--            <groupId>ai.timefold.solver</groupId>-->
        <!--            <artifactId>timefold-solver-spring-boot-starter</artifactId>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.mercateo</groupId>
            <artifactId>test-clock</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency><!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>ai.timefold.solver</groupId>
                <artifactId>timefold-solver-bom</artifactId>
                <version>${timefold-solver.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.dizitart</groupId>
                <artifactId>nitrite-bom</artifactId>
                <version>4.2.2</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <configuration>
                    <targetClasses>
                        <param>dev.vinpol.nebula.dragonship.automation*</param>
                    </targetClasses>
                    <targetTests>
                        <param>dev.vinpol.nebula.dragonship.automation*</param>
                    </targetTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>gg.jte</groupId>
                <artifactId>jte-maven-plugin</artifactId>
                <version>${jte.version}</version>
                <configuration>
                    <sourceDirectory>${basedir}/src/main/jte</sourceDirectory>
                    <contentType>Html</contentType>
                    <binaryStaticContent>true</binaryStaticContent>
                    <targetDirectory>${basedir}/target</targetDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>com.github.eirslett</groupId>-->
<!--                <artifactId>frontend-maven-plugin</artifactId>-->
<!--                <version>1.15.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>install node and npm</id>-->
<!--                        <goals>-->
<!--                            <goal>install-node-and-npm</goal>-->
<!--                        </goals>-->
<!--                        <phase>generate-resources</phase>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>npm install</id>-->
<!--                        <goals>-->
<!--                            <goal>npm</goal>-->
<!--                        </goals>-->

<!--                        <phase>generate-resources</phase>-->

<!--                        <configuration>-->
<!--                            <arguments>install</arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>npm build</id>-->
<!--                        <goals>-->
<!--                            <goal>npm</goal>-->
<!--                        </goals>-->

<!--                        <phase>generate-resources</phase>-->

<!--                        <configuration>-->
<!--                            <arguments>run build</arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <nodeVersion>v22.1.0</nodeVersion>-->
<!--                    <workingDirectory>${project.basedir}/frontend</workingDirectory>-->
<!--                    <installDirectory>target</installDirectory>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>

/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.vinpol.spacetraders.sdk.models;

/**
 * Meta details for pagination.
 */

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Metadata about paginated results.
 *
 * @param total Shows the total amount of items of this kind that exist. Minimum: 0
 * @param page  A page denotes an amount of items, offset from the first item. Each page holds an amount of items equals to the `limit`. Minimum: 1
 * @param limit The amount of items in each page. Limits how many items can be fetched at once. Also, sometimes known as pageSize. Minimum: 1, Maximum: 20
 */
public record Meta(
    @JsonProperty("total")
    int total,
    @JsonProperty("page")
    int page,
    @JsonProperty("limit")
    int limit
) {
    public Meta total(Integer total) {
        return new Meta(total, this.page, this.limit);
    }

    public Meta page(Integer page) {
        return new Meta(this.total, page, this.limit);
    }

    public Meta limit(Integer limit) {
        return new Meta(this.total, this.page, limit);
    }
}

